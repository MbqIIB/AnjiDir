BROKER SCHEMA merchantCardLoan


CREATE DATABASE MODULE vendorUploadFormat_Database
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		DECLARE K INTEGER 1;
		DECLARE J INTEGER;
    	SET J = CARDINALITY(Root.DFDL.vendorUploadFormat.[]);
	
		WHILE K <= J DO	
			INSERT INTO Database.MERCHANT_LOANS
			(
				EMIID,
				CARDPAN,
				ISSUER,
				ACQUIRER,
				AGGREGATOR_MERCHANT_NAME,
				MANUFACTURER,
				RRN,
				AUTH_CODE,
				TX_AMOUNT,
				EMI_OFFER,
				EMI_PLAN_ID,
				CUSTOMER_NAME,
				MOBILE,
				ADDRESS,
				EMAIL,
				STORE_NAME,
				ADDRESS1,
				STORE_CITY,
				STORE_STATE,
				MID,
				TID,
				TX_TIME,
				SUBVENTION_PAYABLE_TO_ISSUER,
				SUBVENTION_AMOUNT,
				INTEREST_RATE,
				CUSTOMER_PROCESSING_FEE,
				CUSTOMER_PROCESSING_AMOUNT,
				TX_STATUS,
				STATUS,
				DESCRIPTION,
				PRODUCT_CATEGORY,
				PRODUCT_SUB_CATEGORY1,
				PRODUCT_SUB_CATEGORY2,
				MODEL_NAME,
				MERCHANT_NAME,
				EMI_AMOUNT,
				LOAN_AMOUNT,
				DISCOUNT_OR_CASHBK_PERCEN,
				DISCOUNT_OR_CASHBK_AMOUNT,
				ADDITIONAL_CASHBACK,
				BONUS_REWARD_POINTS,
				EMI_MODEL
			)
			VALUES
			(
				Root.DFDL.vendorUploadFormat.record[K].emiID,
				Root.DFDL.vendorUploadFormat.record[K].cardPan,
				Root.DFDL.vendorUploadFormat.record[K].issuer,
				Root.DFDL.vendorUploadFormat.record[K].acquirer,
				Root.DFDL.vendorUploadFormat.record[K].aggregatorMerchantName,
				Root.DFDL.vendorUploadFormat.record[K].manufacturer,
				Root.DFDL.vendorUploadFormat.record[K].rrn,
				Root.DFDL.vendorUploadFormat.record[K].authCode,
				Root.DFDL.vendorUploadFormat.record[K].txAmount,
				Root.DFDL.vendorUploadFormat.record[K].emiOffer,
				Root.DFDL.vendorUploadFormat.record[K].emiPlanID,
				Root.DFDL.vendorUploadFormat.record[K].customerName,
				Root.DFDL.vendorUploadFormat.record[K].mobile,
				Root.DFDL.vendorUploadFormat.record[K].address,
				Root.DFDL.vendorUploadFormat.record[K].eMail,
				Root.DFDL.vendorUploadFormat.record[K].storeName,
				Root.DFDL.vendorUploadFormat.record[K].address1,
				Root.DFDL.vendorUploadFormat.record[K].storeCity,
				Root.DFDL.vendorUploadFormat.record[K].storeState,
				Root.DFDL.vendorUploadFormat.record[K].mID,
				Root.DFDL.vendorUploadFormat.record[K].tID,
				Root.DFDL.vendorUploadFormat.record[K].txTime,
				Root.DFDL.vendorUploadFormat.record[K].subventionPayableToIssuer,
				Root.DFDL.vendorUploadFormat.record[K].subventionAmount,
				Root.DFDL.vendorUploadFormat.record[K].interestRate,
				Root.DFDL.vendorUploadFormat.record[K].customerProcessingFee,
				Root.DFDL.vendorUploadFormat.record[K].customerProcessingAmount,
				Root.DFDL.vendorUploadFormat.record[K].txStatus,
				Root.DFDL.vendorUploadFormat.record[K].status,
				Root.DFDL.vendorUploadFormat.record[K].description,
				Root.DFDL.vendorUploadFormat.record[K].productCategory,
				Root.DFDL.vendorUploadFormat.record[K].productSubCategory1,
				Root.DFDL.vendorUploadFormat.record[K].productSubCategory2,
				Root.DFDL.vendorUploadFormat.record[K].modelName,
				Root.DFDL.vendorUploadFormat.record[K].merchantName,
				Root.DFDL.vendorUploadFormat.record[K].emiAmount,
				Root.DFDL.vendorUploadFormat.record[K].loanAmount,
				Root.DFDL.vendorUploadFormat.record[K].discountOrCashbackPercentage,
				Root.DFDL.vendorUploadFormat.record[K].discountOrCashbackAmount,
				Root.DFDL.vendorUploadFormat.record[K].additionalCashback,
				Root.DFDL.vendorUploadFormat.record[K].bonusRewardPoints,
				Root.DFDL.vendorUploadFormat.record[K].emiModel
			);
	
			SET K = K + 1;
		END WHILE;
		RETURN TRUE;
	END;

END MODULE;
