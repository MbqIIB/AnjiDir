DECLARE ns NAMESPACE 'http://AccountOpeningService';

CREATE FUNCTION getBatchID(piMnemonic CHARACTER) RETURNS INTEGER
BEGIN
	DECLARE lBatchID CHARACTER;
	
	UPDATE Database.RCDSSYSPARAMS SET "VALUE" = RCDSSYSPARAMS.VALUE + 1 WHERE RCDSSYSPARAMS.MNEMONIC = piMnemonic;
		
	SET lBatchID = THE(SELECT ITEM RCDSSYSPARAMS.VALUE FROM Database.RCDSSYSPARAMS WHERE RCDSSYSPARAMS.MNEMONIC = piMnemonic);
	
	RETURN CAST(lBatchID AS INTEGER);
END;

CREATE DATABASE MODULE openGroupLoanAccountStepEngine_openGroup
	CREATE PROCEDURE group(IN batchID INTEGER, IN partnerID INTEGER, IN fileName CHARACTER, IN processID INTEGER) LANGUAGE DATABASE EXTERNAL NAME "dbo.INITIATE_BATCH_PROCESS";
	
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		DECLARE lBatchID INTEGER;
		DECLARE customerGroup REFERENCE TO Root.XMLNSC.ns:openGroupLoanAccount.openGroupLoanAccountRequest.*:customerGroup;
		
		SET lBatchID = getBatchID('HO_04_BATCHID');
	
		--- insert the record	
		INSERT INTO Database."[HO-GROUP-STAGING]"
		( 
			"[BATCHID]",
			"[EXTERNALGROUPNO]",
			"[GROUPNAME]",
			"[GROUPTYPE]",
			"[MINNUMBER]",
			"[MAXNUMBERS]",
			"[FORMATIONDATE]",
			"[DAYOFPERIOD]",
			"[MEETINGTIME]",
			"[MEETINGFREQUENCY]",
            "[EXTERNALCENTERID]",
            "[CENTERNAME]",
            "[MAXCENTERLIMIT]",
            "[DISTANCEFROMBRANCH]",
            "[BRANCHCODE]",
            "[OPERATINGREGIONCODE]",
            "[DESCRIPTION]",
            "[COMMENTS]",
			"[STATUS]"	
		)
		VALUES
		( 
			lBatchID,
			customerGroup.externalId,
			customerGroup.groupName,
			customerGroup.groupType,
			customerGroup.minNumber,
			customerGroup.maxNumber,
			customerGroup.formationDate,
			customerGroup.dayOfPeriod,
			customerGroup.meetingTime,
			customerGroup.meetingFrequency,
			customerGroup.customerGroup.externalCenterId,
			customerGroup.centerName,
			customerGroup.maximumCenterLimit,
			customerGroup.distanceFromBranch,
			customerGroup.branchCode,
			customerGroup.operatingRegionCode,
			'New Group',
			'Good',
			'1'
		 ); 


		-- call the procedure to process the record
		CALL group(lBatchID, 0, 'fileName',2);
	END;
END MODULE;
