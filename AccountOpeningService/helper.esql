CREATE FUNCTION formatTime(IN piHour INT, IN piMinute INT) RETURNS CHARACTER
BEGIN
	DECLARE lTime CHARACTER;
	DECLARE lHour INTEGER;
	DECLARE lHourString CHARACTER;
	DECLARE lMinuteString CHARACTER;
	DECLARE lAMPM CHARACTER;
	DECLARE datePart INTEGER;
	DECLARE lDate DATE;

	IF (piHour > 12) THEN
		SET lHour = piHour -12;
		SET lAMPM = 'PM';
	ELSEIF (piHour = 12) THEN
		SET lHour = piHour;
		SET lAMPM = 'PM';
	ELSE
		SET lHour = piHour;
		SET lAMPM = 'AM';
	END IF;
	
	IF (lHour < 10 ) THEN
		SET lHourString = '0'||CAST(lHour AS CHARACTER);
	ELSE
		SET lHourString = CAST(lHour AS CHARACTER);
	END IF;
	
	IF (piMinute < 10 ) THEN
		SET lMinuteString = '0'||CAST(piMinute AS CHARACTER);
	ELSE
		SET lMinuteString = CAST(piMinute AS CHARACTER);
	END IF;
	
	SET lTime = lHourString||':'||lMinuteString||lAMPM;
	
	RETURN lTime;
END;

CREATE FUNCTION getAge(IN picurrentDate DATE, IN piDOB DATE) RETURNS INTEGER
BEGIN
	DECLARE lAge INTEGER;
	DECLARE inyear INTERVAL;
	SET inyear = (picurrentDate-piDOB) YEAR; 
	SET lAge= CAST(inyear AS INTEGER);
	RETURN lAge;
END;