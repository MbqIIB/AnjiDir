BROKER SCHEMA uploadCustomerDocument
DECLARE ns NAMESPACE 'http://AccountOpeningService';

CREATE COMPUTE MODULE setImageUrl
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL CopyMessageHeaders();
		CALL CopyEntireMessage();
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		SET OutputRoot = InputRoot;
		--SET OutputLocalEnvironment.Destination.HTTP.RequestURL = InputRoot.XMLNSC.ns:uploadCustomerDocument.uploadCustomerDocumentRequest.imageUrl;
		SET OutputLocalEnvironment.Destination.HTTP.QueryString.customerid = InputRoot.XMLNSC.ns:uploadCustomerDocument.uploadCustomerDocumentRequest.customerId;
		IF InputRoot.XMLNSC.ns:uploadCustomerDocument.uploadCustomerDocumentRequest.documentType = 'Photo' THEN
			SET OutputLocalEnvironment.Destination.HTTP.QueryString.imagefilename = 'CUSTOMER_IMAGE.jpg';
		ELSE
			SET OutputLocalEnvironment.Destination.HTTP.QueryString.imagefilename = 'CUSTOMER_IMAGE.jpg';		
		END IF;
	END;
END MODULE;

CREATE COMPUTE MODULE changeImageToBlob
	CREATE FUNCTION Main() RETURNS BOOLEAN
	BEGIN
		CALL CopyMessageHeaders();
		CALL CopyEntireMessage();
		RETURN TRUE;
	END;

	CREATE PROCEDURE CopyMessageHeaders() BEGIN
		DECLARE I INTEGER 1;
		DECLARE J INTEGER;
		SET J = CARDINALITY(InputRoot.*[]);
		WHILE I < J DO
			SET OutputRoot.*[I] = InputRoot.*[I];
			SET I = I + 1;
		END WHILE;
	END;

	CREATE PROCEDURE CopyEntireMessage() BEGIN
		INSERT INTO Database.RCDSCUSTOMERDOCUMENT (CUSTOMERID,DOCNAME,PAGENAME,PIC,CRBY,ISDELETED) VALUES ('12345','DOC1','PAGE',InputRoot.BLOB.BLOB,14,'X');
		SET OutputRoot.XMLNSC.ns:uploadCustomerDocumentResponse.uploadCustomerDocumentResponse.status = 'completed';
		SET OutputRoot.XMLNSC.ns:uploadCustomerDocumentResponse.uploadCustomerDocumentResponse.message = 'Image uploaded successfully';
	END;
END MODULE;